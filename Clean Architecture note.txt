Clean  Architecture 
- Core 
	อิสระต่อการเปลี่ยนแปลง เช่น UI (Presentation Layer), Persistence, Database, External Thrid Party เป็นต้น
	มีหน้าที่เก็บพวก entities (business domain entities) และ  use cases (business rules) หรือเรียกสิ่งเหล่านี้ว่า business and application layers
	+ entities ที่ Domain Library Project
	+ use cases เก็บ business logic layer เช่น service, interfaces, domain validations, error handling ที่ Application Library Project
	+ Domain Library ต้องไม่มี reference 
	+ Application Library ต้องมี reference แค่ Domain Library
- Interface (API, MVC)
	ทำหน้าที่เป็น communicator คนสื่อสารระหว่าง external source เช่น database, file system, thrid party service และ  convert data เพื่อ Core (use cases, business logic)
- External Interface 
	presentation layer

ref : 
clean architecture
 - https://www.c-sharpcorner.com/article/clean-architecture-with-net-6-using-entity-framework/
find instance of database engine
 - https://docs.microsoft.com/en-us/sql/relational-databases/lesson-1-connecting-to-the-database-engine?view=sql-server-ver15
scaffold database to entity
 - https://geidtiphong.medium.com/%E0%B8%AA%E0%B8%A3%E0%B9%89%E0%B8%B2%E0%B8%87-entities-%E0%B8%87%E0%B9%88%E0%B8%B2%E0%B8%A2%E0%B9%86-%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2-entity-framework-1236ac41a593